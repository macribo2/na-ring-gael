



@font-face {
	font-family: aonchlo;
	src: url(../../fonts/aonchlo.ttf);
  }
  
@font-face {
	font-family: info;
	src: url(../../fonts/INFO56_0.ttf);
  }
  
/* *{
	background-color:black;} */
	.button-group{
		margin:0 !important;
		align-content: center;
	}
	
	@font-face { 
		font-family: 'Urchlo Romhanach'; src: url('../../fonts/urchlo.ttf'); 
	} 

	#hero-says{

		
		font-size: 1.4em;
		color: black;
		position: fixed;
		/* border: 5px solid green; */
		width: 80%;
		left: 10%;
		top: 5%;
		height:45%;
		font-family: "Verdana", cursive, sans-serif;
	
	}
	.btn{

		display: block;
		width: 100%;
		/* margin:2px; */
		border-radius:10px;
padding-top:1%;
padding-bottom:1%;		
			margin:2px !important;
	font-size: 1.5em !important;
	background-color: rgb(69, 51, 72) !important;
	color: goldenrod !important;
border:1px solid black !important;	  
		
	}
	
.btn-right {
	font-size: 1.7rem;

  /* border:3px solid#c469db9c; */
  /* padding-right:8px !important;  */
  /* border:2px solid #c469db */

  /* color: rgb(255, 227, 255); */

}


	#keyboard-container, #caps-keyboard-container, #fada-mode,#new-buttons{
pointer-events: all;
		
	}
	/* #fada-mode{display:none;} */
	#e-line, #f-line , #a-line, #c-line, #shift-line{
		/* border:2px solid orange; */
		width:100%;
		display:flex;
	}
	
	#shift-line{
		bottom:4%;
		transform: scale(0.7);
	}

	#backspace{
		
		left:10px;
		width:50px;
	}
	
	.z-line{
		
		margin-left:2% !important;
	}
	
	
	
	#j-line{
		z-index: 910000;
		/* border:4px solid blue; */
display: flex;
justify-content: flex-end;
position: relative;
width:400px;
top: 60%;

		
	}
	
	
	.btn-right-logo{
		/* border:3px solid orange; */
		/* padding-right:8px !important;  */
		/* background-color:#648136; */
		/* -webkit-animation: bounce 6.5s ease-out forwards; */
		/* -moz-animation: bounce 1000ms ease-out forwards; */
		/* -o-animation: bounce 1000ms ease-out forwards; */
		/* animation: bounce 2.5s ease-out forwards;	 */
		
	}
	.btn-left-logo{
		/* background-color:#c469db; */
	
		/* color: rgb(255, 227, 255); */
		/* border:3px solid orange; */
		/* padding-left:8px !important;  */
		-webkit-animation: bounce 2.2s ease-out forwards;
		-moz-animation: bounce 1600ms ease-out forwards;
		-o-animation: bounce 1600ms ease-out forwards;
		animation: bounce 2.2s ease-out forwards;
	 
	}
	#keyboard-container{

		position:fixed;
		display:inline-block;
		align-content: center;
		text-align: center;
		height:50%;
		left:0;
		top:67%;
		width:100%;
		z-index: 3500;
	}
	
	

	.hidden{display: none !important;}


#exit-easca{
	color:rgb(122, 33, 74)
}

/* developing an algorithm generator? */

.hg-theme-default{
    background-color: black;
    border-radius: 5px;
    box-sizing: border-box;
    overflow: hidden;
    /* padding: 5px; */
    touch-action: manipulation;
    -webkit-user-select: none;
    user-select: none;
    top: 61%;
    position: fixed;
	z-index: 9000;

}

 .hg-button, .hg-layout-easca.hg-rows,
.hg-theme-default,.hg-standardBtn{	
	background-color: rgba(4, 4, 4,0) !important;

}
.hg-button, .hg-button.hg-button {
	background-color: rgb(52, 12, 89) !important;
	color: aliceblue !important;
  }
  .hg-button span {
    color: aliceblue !important;
}
.react-simple-keyboard{
	top: 42%;
	left: 2.5%;
	width: 95% !important;

}

.easca-input{
    top: 8%;
    position: fixed;
    z-index: 99999;
    width: 96%;
    height: 33%;
    left: 4%;
    text-align: left;
    font-size: 2em;
    background-color: rgba(0,0,0,0);
    font-family: info;
	color:greenyellow

}




.bg-container{

	align-content: center;
	justify-content: center;
	position: fixed;
	height: 100%;
	width: 100%;
	top:0;
	left:0;
	display: grid;
	position: fixed;
	z-index: 999;
	pointer-events: auto;
}

#console-bg{
	background-size: contain;

	pointer-events: none;
	z-index: 15;
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	height: 110%;
	max-width: 100%; 
	max-height: 100%; 
	width:100%;
}


  
	.hg-button, .hg-standardBtn{
		
		font-size: 1.5em;
	
	}

	.react-simple-keyboard .hg-theme-default .hg-button {
		color: red !important; /* Change this to your desired text color */
	  }

	  .long-press-options {
		position: absolute;
		background: white;
		border: 1px solid #ccc;
		box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
		z-index: 1000;
		display: flex;
		flex-direction: column;
	  }
	  



	  .options-menu {
		position: absolute; /* Position it absolutely for better control */
		left: 50px; /* Adjust based on your layout */
		background-color: rgba(255, 255, 255, 0.9);
		border: 1px solid #ccc;
		border-radius: 4px;
		padding: 10px;
		z-index: 9999; /* Ensure it appears above other elements */

		
	  }
	  
	  .options-menu button {
		margin: 5px;
	  }
	  .options-menu {
		display: flex;
		justify-content: center; /* Center the buttons horizontally */
		position: absolute; /* Position it absolutely */
		top: 50%; /* Adjust this as needed */
		left: 35%; /* Centering the menu */
		z-index: 9900; /* Make sure it appears above other elements */
		height:50px;
		background-color: rgba(0,0,0,0);
		border: none;
	  }
	  
	  .options-menu button {
		background-color: rgb(156, 6, 194); /* Dark blue background */
		color: rgb(255, 240, 255); /* Pale text color */
		border: none; /* Remove default border */
		border-radius: 5px; /* Optional: add rounded corners */
		padding: 10px 15px; /* Adjust padding for button size */
		margin: 0 5px; /* Space between buttons */
		cursor: pointer; /* Pointer cursor on hover */
		transition: background-color 0.3s; /* Smooth transition for hover effect */
	height: 40px;
	width:60px;  
	}
	  
	  .options-menu button:hover {
		background-color: lightblue; /* Optional: change color on hover */
	  }
	  

	  /* easca.css */

.button-animation {
	animation: bright-fade 0.5s ease forwards;
  }
  
  @keyframes bright-fade {
	0% {
	  filter: brightness(1);
	}
	50% {
	  filter: brightness(1.5); /* Brighten the button */
	}
	100% {
	  filter: brightness(1); /* Fade back to original */
	}
  }
  

  .options-menu {
	transition: opacity 0.5s ease-out;
  }
  
  .options-menu.fade-out {
	opacity: 0;
  }
  .easca-input {
	cursor: text; /* Ensures the cursor changes to text (I-beam) over the input */
  }
  
  .easca-input::placeholder {
	/* Custom styling for the placeholder cursor */
	color: grey;
  }
  
  .easca-input:focus {
	border-color: #4A90E2; /* Custom border when focused */
	outline: none;
	caret-color: lime; /* Change the color of the caret (blinking cursor) */
  }
	
  .easca-input {
	caret-shape:block;
	caret-color: lime; /* Customize the color of the caret (blinking cursor) */
	font-family: monospace; /* Optional: Set font to make the cursor stand out */
  }
  .simple-keyboard .hg-button.pressed {
	transition: border 0.3s ease;
  }
  
  .simple-keyboard .hg-button.pressed {
	border: 3px solid rgb(251, 255, 28);
  }
	
  .hg-button {
	/* Your existing button styles */
	flex: 1 !important; /* Default button width */
  }
  .hg-button[data-skbtn="{space}"] {
	flex: 2 !important; /* Make the space button twice as wide */
  }

  .hg-button[data-skbtn="_"] {
	color:orange;
  }